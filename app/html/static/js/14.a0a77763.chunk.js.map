{"version":3,"sources":["components/Auth/Signin.js"],"names":["connect","state","errorMessage","auth","signin","history","localXCust","localStorage","getItem","useState","Boolean","hasLocalXCust","setHasLocalXCust","onSubmit","values","a","formProps","xCust","window","setItem","push","onXCustCancel","id","sx","width","height","display","alignItems","justifyContent","flexDirection","bgcolor","p","boxShadow","variant","mb","pb","color","fontSize","fontWeight","letterSpacing","validate","errors","userName","password","length","initialValues","render","handleSubmit","form","submitting","pristine","component","maxWidth","textAlign","paddingBottom","border","borderRadius","outlineColor","theme","palette","primary","main","flexWrap","position","top","right","left","transform","m","backgroundColor","name","input","meta","className","type","placeholder","error","touched","autoComplete","disabled","value","onClick","onClearClick","reset"],"mappings":"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","file":"static/js/14.a0a77763.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Form, Field } from 'react-final-form'\nimport { signin } from '../../slices/authSlice'\nimport { Button, Box, Card, Typography, IconButton } from '@mui/material'\nimport HighlightOffRoundedIcon from '@mui/icons-material/HighlightOffRounded'\n\nconst Signin = ({\n  signin,\n  history,\n  errorMessage,\n}) => {\n  const localXCust = localStorage.getItem('xCust')\n  const [hasLocalXCust, setHasLocalXCust] = useState(Boolean(localXCust))\n\n  let formData = {}\n\n  const formValidate = (values) => {\n    const errors = {}\n    if (!values.userName) {\n      errors.userName = '必填'\n    }\n    if (!values.password) {\n      errors.password = '必填'\n    }\n    if (!localXCust && !values.xCust) {\n      errors.xCust = '必填'\n    } else if (!localXCust && values.xCust.length !== 4) {\n      errors.xCust = '長度須為四個字元'\n    }\n    return errors\n  }\n\n  const onSubmit = async (values) => {\n    const formProps = hasLocalXCust ? { ...values, xCust: localXCust } : values\n\n    const signinResult = await signin(formProps)\n    if (!signinResult) return\n    if (values.xCust) {\n      window.localStorage.setItem('xCust', values.xCust)\n    }\n    history.push('/')\n  }\n\n  const onXCustCancel = () => {\n    setHasLocalXCust(false)\n  }\n\n  const onClearClick = (formReset) => {\n    formReset()\n    onXCustCancel()\n  }\n\n  return (\n    <Box id=\"signin\"\n      sx={{\n        width: '100vw',\n        height: 'calc(100vh - 2.5rem)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        bgcolor: 'background.default',\n      }}\n    >\n      <Card\n        sx={{\n          p: '2rem 1.75rem 3rem',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          boxShadow: 3,\n          // bgcolor: 'background.paper',\n        }}\n      >\n        <Typography variant=\"h1\"\n          sx={{\n            mb: 0,\n            pb: '1rem',\n            color: '#555555',\n            fontSize: '2rem',\n            fontWeight: 'bold',\n            letterSpacing: '0.05em',\n          }}\n        >\n          會員登入\n        </Typography>\n\n        <Form\n          onSubmit={onSubmit}\n          validate={formValidate}\n          initialValues={formData}\n          render={({ handleSubmit, form, submitting, pristine, values }) => (\n            <Box component=\"form\" onSubmit={handleSubmit}\n              sx={{\n                width: '90%',\n                maxWidth: '300px',\n                '& label': {\n                  width: '100%',\n                  fontSize: '0.9rem',\n                  fontWeight: 'bold',\n                  textAlign: 'left',\n                  paddingBottom: '0.25em',\n                  color: '#aaaaaa',\n                },\n                '& input': {\n                  p: '0.25em 0.5em',\n                  width: '100%',\n                  border: '0.5px solid #c4c4c4',\n                  borderRadius: '0.125em',\n                  outlineColor: (theme) => theme.palette.primary.main,\n                  '&:autofill': {\n                    bgcolor: '#222',\n                  },\n                },\n                '& .form-field': {\n                  p: '0.25rem 0',\n                  display: 'flex',\n                  flexWrap: 'wrap',\n                  alignItems: 'center',\n                  justifyContent: 'flex-start',\n                  position: 'relative',\n                  '& .error-span': {\n                    position: 'absolute',\n                    top: '0.5rem',\n                    right: 0,\n                    fontSize: '0.75rem',\n                    color: 'error.light',\n                  },\n                  '& .MuiSvgIcon-root': {\n                    color: 'text.disabled',\n                  },\n                },\n                '& .btn-field': {\n                  p: '2em 0 0',\n                  position: 'relative',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  '& .error-massage': {\n                    position: 'absolute',\n                    top: '0.125rem',\n                    left: '50%',\n                    transform: 'translate(-50%, 0)',\n                    color: '#df6c3e',\n                    fontWeight: ' bold',\n                    fontSize: '0.875rem',\n                  },\n                  '& button': {\n                    p: '0.5em 0',\n                    m: '0 0.75em',\n                    width: '6rem',\n                    color: 'background.paper',\n                    letterSpacing: '0.075em',\n                    backgroundColor: (theme) => theme.palette.primary.main,\n                    '&:disabled': {\n                      color: '#777777',\n                    },\n                    '&:hover': {\n                      backgroundColor: '#fabd5e',\n                    },\n                  },\n                },\n              }}\n            >\n\n              <Field name=\"userName\">\n                {({ input, meta }) => (\n                  <div className=\"form-field\">\n                    <label>\n                      使用者名稱或電子信箱\n                    </label>\n                    <input\n                      {...input}\n                      type=\"text\"\n                      placeholder=\"Username or Email\" />\n                    {meta.error && meta.touched && <span className=\"error-span\">{meta.error}</span>}\n                  </div>\n                )}\n              </Field>\n\n              <Field name=\"password\">\n                {({ input, meta }) => (\n                  <div className=\"form-field\">\n                    <label>密碼 </label>\n                    <input\n                      {...input}\n                      type=\"text\"\n                      placeholder=\"Password\"\n                      autoComplete=\"off\" />\n                    {meta.error && meta.touched && <span className=\"error-span\">{meta.error}</span>}\n                  </div>\n                )}\n              </Field>\n\n              {hasLocalXCust\n                ? (\n                  <Field name=\"xCust\">\n                    {({ input, meta }) => (\n                      <div className=\"form-field\">\n                        <label>Cust </label>\n                        <Box\n                          sx={{\n                            width: '100%',\n                            position: 'relative',\n                          }}\n                        >\n                          <input\n                            {...input}\n                            disabled\n                            type=\"text\"\n                            placeholder=\"Cust\"\n                            autoComplete=\"off\"\n                            value={localXCust}\n                          />\n                          {meta.error && meta.touched && <span className=\"error-span\">{meta.error}</span>}\n                          <IconButton onClick={onXCustCancel}\n                            sx={{\n                              position: 'absolute',\n                              top: '50%',\n                              right: 0,\n                              transform: 'translateY(-50%)',\n                            }}\n                          >\n                            <HighlightOffRoundedIcon />\n                          </IconButton>\n                        </Box>\n                      </div>\n                    )\n                    }\n                  </Field >\n                )\n                : (\n                  <Field name=\"xCust\">\n                    {({ input, meta }) => (\n                      <div className=\"form-field\">\n                        <label>Cust </label>\n                        <input\n                          {...input}\n                          type=\"text\"\n                          placeholder=\"Cust\"\n                          autoComplete=\"off\"\n                        />\n                        {meta.error && meta.touched && <span className=\"error-span\">{meta.error}</span>}\n                      </div>\n                    )\n                    }\n                  </Field >\n                )\n              }\n\n              <div className=\"btn-field\">\n\n                <Box sx={{ width: '100%', textAlign: 'center', }} className=\"error-massage\">{errorMessage}</Box>\n                <Button type=\"submit\" disabled={submitting}>\n                  登入\n                </Button>\n                <Button\n                  type=\"Button\"\n                  onClick={() => onClearClick(form.reset)}\n                  disabled={submitting || pristine}\n                >\n                  清除\n                </Button>\n              </div>\n            </Box>\n          )}\n        />\n\n      </Card>\n    </Box>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    errorMessage: state.auth.errorMessage,\n  }\n}\n\nexport default connect(mapStateToProps, { signin })(Signin)"],"sourceRoot":""}