{"version":3,"sources":["components/CompanyConfig/CompanyConfig.js"],"names":["defaultComs","CompanyConfig","user","useSelector","state","edcPath","window","configBridge","getConfig","edc","path","printerPath","printer","useState","localStorage","getItem","salePointId","receiptMode","setReceiptMode","includes","edcMode","setEdcMode","printerMode","setPrinterMode","edcValue","setEdcValue","printerValue","setPrinterValue","useEffect","setConfig","renderRadios","map","com","value","control","label","id","sx","width","height","display","alignItems","justifyContent","flexDirection","bgcolor","container","maxWidth","variant","pb","flex","fontWeight","item","md","p","borderRadius","wordBreak","name","onChange","e","target","setItem","disabled"],"mappings":"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","file":"static/js/15.5306a650.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport Box from '@mui/material/Box'\nimport Grid from '@mui/material/Grid'\nimport Radio from '@mui/material/Radio'\nimport Typography from '@mui/material/Typography'\nimport TextField from '@mui/material/TextField'\nimport RadioGroup from '@mui/material/RadioGroup'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport FormControl from '@mui/material/FormControl'\nimport FormLabel from '@mui/material/FormLabel'\n// import { updateCompanyInfo } from '../../slices/companyInfoSlice'\n\nconst defaultComs = ['COM1', 'COM2', 'COM3', 'COM4', 'COM5']\n\n// import { Form, Field } from 'react-final-form'\n// const { ipcRenderer } = window.require('electron')\n\n// const validate = values => {\n//   const errors = {}\n//   if (!values.companyName) {\n//     errors.companyName = '公司名稱為必填'\n//   }\n//   if (!values.companyId) {\n//     errors.companyId = '公司編號為必填'\n//   }\n//   return errors\n// }\n\n// salePointId\n\nconst CompanyConfig = () => {\n  const user = useSelector(state => state.user)\n  // let formData = {}\n\n  // const onSubmit = values => {\n  //   window.ipcRenderer.send('store-company-info', values)\n  //   props.updateCompanyInfo(values)\n  //   props.history.push('./')\n  // }\n  const edcPath = window.configBridge.getConfig()?.edc?.path\n  const printerPath = window.configBridge.getConfig()?.printer?.path\n\n  const [receiptMode, setReceiptMode] = useState(window.localStorage.getItem(`receiptMode/${user.salePointId}`) || '')\n  const [edcMode, setEdcMode] = useState((edcPath && defaultComs.includes(edcPath))\n    ? edcPath\n    : (edcPath === '')\n      ? 'other'\n      : 'COM4'\n  )\n  const [printerMode, setPrinterMode] = useState((printerPath && defaultComs.includes(printerPath))\n    ? printerPath\n    : (printerPath === '')\n      ? 'other'\n      : 'COM3'\n  )\n  const [edcValue, setEdcValue] = useState((edcPath && defaultComs.includes(edcPath))\n    ? ''\n    : edcPath\n  )\n  const [printerValue, setPrinterValue] = useState((printerPath && defaultComs.includes(printerPath))\n    ? ''\n    : printerPath\n  )\n\n  useEffect(() => {\n    if (!edcPath && edcPath !== '') {\n      window.configBridge.setConfig('edc', { path: 'COM4' })\n    }\n    if (!printerPath && printerPath !== '') {\n      window.configBridge.setConfig('printer', { path: 'COM3' })\n    }\n  }, [edcPath, printerPath])\n\n  const handleReceiptModeChange = e => {\n    setReceiptMode(e.target.value)\n    window.localStorage.setItem(`receiptMode/${user.salePointId}`, e.target.value)\n  }\n\n  const handleEdcChange = e => {\n    setEdcMode(e.target.value)\n    if (e.target.value === 'other') {\n      window.configBridge.setConfig('edc', { path: edcValue })\n    } else {\n      window.configBridge.setConfig('edc', { path: e.target.value })\n    }\n  }\n\n  const handleEdcValueChange = e => {\n    setEdcValue(e.target.value)\n    if (edcMode === 'other') {\n      window.configBridge.setConfig('edc', { path: e.target.value })\n    }\n  }\n\n  const handlePrinterChange = e => {\n    setPrinterMode(e.target.value)\n    if (e.target.value === 'other') {\n      window.configBridge.setConfig('printer', { path: printerValue })\n    } else {\n      window.configBridge.setConfig('printer', { path: e.target.value })\n    }\n  }\n\n  const handlePrinterValueChange = e => {\n    setPrinterValue(e.target.value)\n    if (edcMode === 'other') {\n      window.configBridge.setConfig('printer', { path: e.target.value })\n    }\n  }\n\n  const renderRadios = defaultComs.map(com => (\n    <FormControlLabel key={com} value={com} control={<Radio />} label={com} />\n  ))\n\n  return (\n    <Box id=\"company-config\"\n      sx={{\n        width: '100vw',\n        height: 'calc(100vh - 2.5rem)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        bgcolor: 'background.paper',\n      }}\n    >\n\n\n      <Grid container justifyContent=\"flex-start\"\n        sx={{\n          width: '90%',\n          maxWidth: '600px',\n        }}\n      >\n        <Typography variant=\"h4\"\n          sx={{\n            pb: '1rem',\n            flex: '1 0 100%',\n            fontWeight: 'bold',\n          }}\n        >\n          連接端設定\n        </Typography>\n\n        <Grid item md={4}>\n          <FormControl sx={{\n            p: '0.75rem',\n            bgcolor: 'background.darkPaper',\n            borderRadius: 1,\n          }}>\n            <FormLabel id=\"demo-controlled-radio-buttons-group\" sx={{ wordBreak: 'keep-all' }}>\n              結帳單據 列印方式\n            </FormLabel>\n            <RadioGroup\n              aria-labelledby=\"demo-controlled-radio-buttons-group\"\n              name=\"controlled-radio-buttons-group\"\n              value={receiptMode}\n              onChange={handleReceiptModeChange}\n            >\n              <FormControlLabel value=\"收據機\" control={<Radio />} label=\"收據機\" />\n              <FormControlLabel value=\"印表機\" control={<Radio />} label=\"印表機\" />\n              <FormControlLabel value=\"\" control={<Radio />} label=\"不列印\" />\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n\n        <Grid item md={4}>\n          <FormControl>\n            <FormLabel id=\"demo-controlled-radio-buttons-group\">收據機 連接埠</FormLabel>\n            <RadioGroup\n              aria-labelledby=\"demo-controlled-radio-buttons-group\"\n              name=\"controlled-radio-buttons-group\"\n              value={printerMode}\n              onChange={handlePrinterChange}\n            >\n              {renderRadios}\n\n              <FormControlLabel value=\"other\" control={<Radio />} label={\n                <TextField variant=\"standard\" disabled={printerMode !== 'other'} value={printerValue} onChange={handlePrinterValueChange} />\n              } />\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n\n        <Grid item md={4}>\n          <FormControl>\n            <FormLabel id=\"demo-controlled-radio-buttons-group\">信用卡機 連接埠</FormLabel>\n            <RadioGroup\n              aria-labelledby=\"demo-controlled-radio-buttons-group\"\n              name=\"controlled-radio-buttons-group\"\n              value={edcMode}\n              onChange={handleEdcChange}\n            >\n              {renderRadios}\n\n              <FormControlLabel value=\"other\" control={<Radio />} label={\n                <TextField variant=\"standard\" disabled={edcMode !== 'other'} value={edcValue} onChange={handleEdcValueChange} />\n              } />\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n\n      </Grid>\n      {/* <Typography variant=\"h2\"\n        sx={{\n          fontSize: '2rem',\n          fontWeight: 'bold',\n          color: '#555555',\n          // paddingTop: '25vh',\n          paddingBottom: '0.5rem',\n          marginBottom: 0,\n        }}\n      >\n        公司資訊設定\n      </Typography>\n      <Form\n        onSubmit={onSubmit}\n        validate={validate}\n        initialValues={formData}\n        render={({ handleSubmit, form, submitting, pristine, values }) => (\n          <Box component=\"form\" onSubmit={handleSubmit}\n            sx={{\n              pb: '1.5rem',\n              width: '90%',\n              maxWidth: '300px',\n              '& label': {\n                width: '100%',\n                fontSize: '0.9rem',\n                fontWeight: 'bold',\n                textAlign: 'left',\n                paddingBottom: '0.25em',\n                color: '#aaaaaa',\n              },\n              '& input': {\n                width: '100%',\n                border: '0.5px solid #c4c4c4',\n                borderRadius: '0.125em',\n                outlineColor: (theme) => theme.palette.primary.main,\n                padding: '0.25em 0.5em',\n              },\n              '& .form-field': {\n                display: 'flex',\n                flexWrap: 'wrap',\n                alignItems: 'center',\n                justifyContent: 'center',\n                padding: '0.25em 0',\n                '&.erroring input::placeholder': {\n                  fontSize: '0.95rem',\n                  color: '#e49090',\n                },\n              },\n              '& .btn-field': {\n                position: 'relative',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                padding: '2em 0 0',\n                '& .error-massage': {\n                  position: 'absolute',\n                  top: '0.125rem',\n                  left: '50%',\n                  transform: 'translate(-50%, 0)',\n                  color: '#df6c3e',\n                  fontWeight: ' bold',\n                  fontSize: '0.875rem',\n                },\n                '& button': {\n                  width: '6rem',\n                  color: 'background.paper',\n                  padding: '0.5em 0',\n                  margin: '0 0.75em',\n                  letterSpacing: '0.075em',\n                  backgroundColor: (theme) => theme.palette.primary.main,\n                  '&:disabled': {\n                    color: '#777777',\n                  },\n                  '&:hover': {\n                    backgroundColor: '#fabd5e',\n                  },\n                },\n              },\n            }}\n          >\n            <Field name=\"companyName\">\n              {({ input, meta }) => {\n                const isError = meta.error && meta.touched\n\n                return (<div className={'form-field' + (isError ? ' erroring' : '')}>\n                  <label>\n                    <div>名稱</div>\n                  </label>\n                  <input\n                    {...input}\n                    type=\"text\"\n                    placeholder={isError ? meta.error : 'Company Name'} />\n                </div>)\n              }}\n            </Field>\n            <Field name=\"companyId\">\n              {({ input, meta }) => {\n                const isError = meta.error && meta.touched\n\n                return (<div className={'form-field' + (isError ? ' erroring' : '')}>\n                  <label>編號</label>\n                  <input\n                    {...input}\n                    type=\"text\"\n                    placeholder={isError ? meta.error : 'Company ID'}\n                    autoComplete=\"off\" />\n                </div>)\n              }}\n            </Field>\n\n            <div className=\"btn-field\">\n\n              <div className=\"error-massage\">{props.errorMessage}</div>\n              <Button type=\"submit\" disabled={submitting}>\n                確認\n              </Button>\n            </div>\n          </Box>\n        )}\n      /> */}\n\n    </Box>\n  )\n}\n\nexport default CompanyConfig\n\n\n\n"],"sourceRoot":""}